@using WebGames.Libs
@using WebGames.Libs.Games.GameTypes
@using Microsoft.AspNet.Identity

@model ActiveUserGameInfo

<div>

    <!-- Standardised web app manifest -->
    <link rel="manifest" href="~/Content/Games/juggler/appmanifest.json" />

    <!-- Allow fullscreen mode on iOS devices. (These are Apple specific meta tags.) -->
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no, minimal-ui" />
    <meta name="apple-mobile-web-app-capable" content="yes" />
    <meta name="apple-mobile-web-app-status-bar-style" content="black" />
    <link rel="apple-touch-icon" sizes="256x256" href="icon-256.png" />
    <meta name="HandheldFriendly" content="true" />

    <!-- Chrome for Android web app tags -->
    <meta name="mobile-web-app-capable" content="yes" />
    <link rel="shortcut icon" sizes="256x256" href="icon-256.png" />
<script src="https://unpkg.com/dexie@latest/dist/dexie.js"></script>
    <!-- All margins and padding must be zero for the canvas to fill the screen. -->
    <script>
        var isMobile = false; //initiate as false
        // device detection
        if (/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(navigator.userAgent.substr(0, 4))) isMobile = true;



    </script>
    <style type="text/css">
        * {
            padding: 0;
            margin: 0;
        }

        html, body {
            background: #000;
            color: #fff;
            overflow: hidden;
            touch-action: none;
            -ms-touch-action: none;
        }
        body {
            background: url(/Content/images/bg.jpg) no-repeat center center;
            background-size: cover;
        }
        canvas {
            touch-action-delay: none;
            touch-action: none;
            -ms-touch-action: none;
        }

        #c2canvasdiv {
            box-shadow: 0 0 80px #ff3d73;
        }

    </style>


    <div id="fb-root"></div>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>

    <script>



    // Issue a warning if trying to preview an exported project on disk.
    (function(){
        // Check for running exported on file protocol
        if (window.location.protocol.substr(0, 4) === "file")
        {
            alert("Exported games won't work until you upload them. (When running on the file:/// protocol, browsers block many features from working for security reasons.)");
        }
    })();
    </script>

    <!-- The canvas must be inside a div called c2canvasdiv -->
    <div id="c2canvasdiv">

        <!-- The canvas the project will render to.  If you change its ID, don't forget to change the
        ID the runtime looks for in the jQuery events above (ready() and cr_sizeCanvas()). -->
        <canvas id="c2canvas" width="950" height="540">
            <!-- This text is displayed if the visitor's browser does not support HTML5.
            You can change it, but it is a good idea to link to a description of a browser
            and provide some links to download some popular HTML5-compatible browsers. -->
            <h1>
                Your browser does not appear to support HTML5.  Try upgrading your browser to the latest version.  <a href="http://www.whatbrowser.org">What is a browser?</a>
                <br /><br /><a href="http://www.microsoft.com/windows/internet-explorer/default.aspx">Microsoft Internet Explorer</a><br />
                <a href="http://www.mozilla.com/firefox/">Mozilla Firefox</a><br />
                <a href="http://www.google.com/chrome/">Google Chrome</a><br />
                <a href="http://www.apple.com/safari/download/">Apple Safari</a>
            </h1>
        </canvas>

    </div>

    <!-- Pages load faster with scripts at the bottom -->
    <!-- Construct 2 exported games require jQuery. -->




    <!-- The runtime script.  You can rename it, but don't forget to rename the reference here as well.
    This file will have been minified and obfuscated if you enabled "Minify script" during export. -->
    <script src="~/Content/Games/balakia/c2runtime.js"></script>
<script src="/Scripts/custom/serverAPI.js"></script>
    <script>
        //window.customGameKey = 'adespotabalakia';
        // Start the Construct 2 project running on window load.


        @if(Model.IsDemo) {
            @:var isDemo = true;
        }
        else {
            @:var isDemo = false;
        }

        jQuery.fn.center = function () {
            this.css("position", "absolute");
            this.css("top", Math.max(0, (($(window).height() - $(this).outerHeight()) / 2) +
                $(window).scrollTop()) + "px");
            this.css("left", Math.max(0, (($(window).width() - $(this).outerWidth()) / 2) +
                $(window).scrollLeft()) + "px");
            return this;
        }
        $(window).on('resize', function () {
            if (isMobile == false) {
                // $('#c2canvasdiv').center();
            }
        });
        // Pause and resume on page becoming visible/invisible
        function onVisibilityChanged() {
            if (document.hidden || document.mozHidden || document.webkitHidden || document.msHidden)
                cr_setSuspended(true);
            else
                cr_setSuspended(false);
        };

        document.addEventListener("visibilitychange", onVisibilityChanged, false);
        document.addEventListener("mozvisibilitychange", onVisibilityChanged, false);
        document.addEventListener("webkitvisibilitychange", onVisibilityChanged, false);
        document.addEventListener("msvisibilitychange", onVisibilityChanged, false);

        function OnRegisterSWError(e)
        {
            console.warn("Failed to register service worker: ", e);
        };
            var gameTime = null;
            var time = @Model.RemainingTime;
            var updateTime = function(){
                gameTime = Math.round(cr_getC2Runtime().all_global_vars['0']['data']);
                cr_getC2Runtime().all_global_vars['0']['data'] = gameTime;
            };
            var newScore = null;
            var score = @Model.GameScore / 35;
            if (score > 0 ) {
                for (i = 2; i < score; i++) { 
                    localforage.setItem('level'+ i +'Opened', 1).then(function (value) {}).catch(function(err) {});
                    console.log('opened level'+i);
                }
            }
            jQuery(document).ready(function ()
            {
                if (isMobile == false) {
                    $('body').addClass('desktop');
                    // $('#c2canvasdiv').center();
                }

            // Create new runtime using the c2canvas
                cr_createRuntime("c2canvas");
                
                setTimeout(function(){

                cr_getC2Runtime().all_global_vars['0']['data'] = time;

                setTimeout(function(){
                    gameTime = Math.round(cr_getC2Runtime().all_global_vars['0']['data']);
                    cr_getC2Runtime().all_global_vars['0']['data'] = gameTime;
                },2000);
                
                setInterval(function () {
                    if (cr_getC2Runtime().all_global_vars['0']['data'] <= 1) {
                        if (isDemo) {
                            window.location.replace("/Games/ActiveExplainer");
                        }
                        else {
                            window.location.replace("/Games/ActiveGameAfter?status=outoftime");
                        }
                    }
                }, 1000);

                setInterval(function () {
                    if (isDemo) return;
                    
                    localforage.length().then(function(numberOfKeys) {
                        // newScore = numberOfKeys - 1;
                        newScore = numberOfKeys;
                        if (newScore > score ) {
                            $.custom.Server.SaveGameScore(newScore, 1, 
                                function (res) { // success
                                    if (res && res.success) {
                                            console.log('score saved');              
                                    } 
                                    else { // fail 
                                        console.log('score not saved');
                                    }
                            }, function () { // fail
                                        console.log('score not saved');           
                            });
                        }
                                        
                    }).catch(function(err) {
                        console.log(err);
                    });



                    $.custom.Server.SaveGameTime(Math.round(cr_getC2Runtime().all_global_vars['0']['data']),
                        function (res) { // success
                            if (res && res.success) {
                                console.log('Playtime updated');
                            }
                            else { // fail
                                console.log('Playtime not updated!');

                            }
                        }, function () { // fail

                        });
                }, 5000);
            },3000)
        });

    </script>
</div>
